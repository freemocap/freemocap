name: Run calibration diagnostics

on:
  pull_request:
    branches: [ main ]
    paths:
        - 'freemocap/**'
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  run-diagnostics:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ["3.11"]

    env:
      PYTHONIOENCODING: utf-8
      PYTHONUTF8: 1
      PYTHONLEGACYWINDOWSSTDIO: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Define recording path based on OS
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "RECORDING_PATH=C:/Users/runneradmin/freemocap_data/recording_sessions/freemocap_test_data" >> $GITHUB_ENV
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            echo "RECORDING_PATH=/home/runner/freemocap_data/recording_sessions/freemocap_test_data" >> $GITHUB_ENV
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            echo "RECORDING_PATH=/Users/runner/freemocap_data/recording_sessions/freemocap_test_data" >> $GITHUB_ENV
          fi

      - name: Install uv and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv venv
          uv pip install -e .

      - name: Process test data
        shell: bash
        run: |
          source .venv/bin/activate || source .venv/Scripts/activate
          python freemocap/diagnostics/calibration/run_calibration.py

      - name: Calculate diagnostics
        shell: bash
        run: |
          source .venv/bin/activate || source .venv/Scripts/activate
          python freemocap/diagnostics/calculate_calibration_diagnostics.py
      
      - uses: actions/upload-artifact@v4
        with:
          name: data_current_calibration_${{ runner.os }}
          path: data_current_calibration.csv

      - name: Upload OS-specific calibration
        uses: actions/upload-artifact@v4
        with:
          name: test_data_calibration_files${{ matrix.os }}
          path: |
            ${{ env.RECORDING_PATH }}/*camera_calibration*.toml
            ${{ env.RECORDING_PATH }}/output_data/charuco_3d_xyz.npy
            ${{ env.RECORDING_PATH }}/output_data/raw_data/charuco_2dData_numCams_numFrames_numTrackedPoints_pixelXY.npy


  generate-report:
    needs: run-diagnostics
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv venv
          source .venv/bin/activate
          uv pip install pandas plotly==5.* jinja2 packaging

      - name: Download OS calibration data
        uses: actions/download-artifact@v4
        with:
          pattern: data_current_calibration_*
          path: collected

      - name: Generate calibration diagnostic report
        shell: bash
        run: |
          source .venv/bin/activate
          python freemocap/diagnostics/calibration/merge_calibration_data.py

      - name: Upload calibration report
        uses: actions/upload-artifact@v4
        with:
          name: calibration_diagnostics_report
          path: freemocap/diagnostics/calibration_diagnostics.html

      - name: Upload summary csv
        uses: actions/upload-artifact@v4
        with:
          name: calibration_diagnostics_csv
          path: freemocap/diagnostics/diagnostic_data/calibration_diagnostics_summary.csv
